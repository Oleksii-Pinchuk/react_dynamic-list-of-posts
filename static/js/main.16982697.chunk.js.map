{"version":3,"sources":["components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/api.ts","api/comments.ts","api/posts.ts","components/PostDetails/PostDetails.tsx","components/UserSelect/UserSelect.tsx","api/users.ts","App.tsx","index.tsx"],"names":["PostsList","posts","postId","setPostId","className","map","post","userId","title","id","type","onClick","NewCommentForm","name","placeholder","BASE_URL","getData","endpoint","a","fetch","response","json","Error","removeData","method","getPostComments","removePostComment","commentId","getUserPosts","getAllPosts","getPostDetails","PostDetails","useState","setPost","comments","setComments","isHidden","setIsHidden","fetchPostComments","recievedComments","fetchPostDetails","recievedPost","useEffect","body","length","comment","filter","UserSelect","users","setUserId","htmlFor","onChange","event","target","value","user","getAllUsers","App","selectedPostId","setSelectedPostId","selectedUserId","setSelectedUserId","setPosts","setUsers","fetchAllUsers","recievedUsers","fetchAllPosts","recievedPosts","fetchUserPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16982697.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  postId: number,\n  setPostId: (postId: number) => void\n};\n\nexport const PostsList: React.FC<Props> = ({ posts, postId, setPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map((post) => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>{`[User #${post.userId}]:`}</b>\n            {post.title}\n          </div>\n\n          {post.id === postId ? (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => setPostId(0)}\n            >\n              Close\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => setPostId(post.id)}\n            >\n              Open\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm: React.FC = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n\n// export const getData = (endpoint: string) => {\n//   return fetch(`${BASE_URL}/${endpoint}`)\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error();\n//       }\n\n//       return response.json();\n//     });\n// };\n\nexport const getData = async (endpoint: string) => {\n  try {\n    const response = await fetch(`${BASE_URL}/${endpoint}`);\n\n    return await response.json();\n  } catch (error) {\n    throw new Error();\n  }\n};\n\nexport const removeData = async (endpoint: string) => {\n  try {\n    const response = await fetch(`${BASE_URL}/${endpoint}`,\n      {\n        method: 'DELETE',\n      });\n\n    return await response.json();\n  } catch (error) {\n    throw new Error();\n  }\n};\n","import { getData, removeData } from './api';\n\nexport const getAllComments = async (): Promise<Comment[]> => {\n  return getData('/comments');\n};\n\nexport const getPostComments = async (postId: number): Promise<Comment[]> => {\n  return getData(`/comments?postId=${postId}`);\n};\n\nexport const getCommentById = async (commentId: number): Promise<Comment> => {\n  return getData(`/comments/${commentId}`);\n};\n\nexport const removePostComment = async (commentId: number) => {\n  return removeData(`/comments/${commentId}`);\n};\n","import { getData } from './api';\n\nexport const getUserPosts = async (userId: number): Promise<Post[]> => {\n  return getData(`/posts?userId=${userId}`);\n};\n\nexport const getAllPosts = async (): Promise<Post[]> => {\n  return getData('/posts/');\n};\n\nexport const getPostDetails = async (postId: number): Promise<Post> => {\n  return getData(`/posts/${postId}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments, removePostComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isHidden, setIsHidden] = useState(false);\n\n  const fetchPostComments = async () => {\n    const recievedComments = await getPostComments(postId);\n\n    setComments(recievedComments);\n  };\n\n  const fetchPostDetails = async () => {\n    const recievedPost = await getPostDetails(postId);\n\n    setPost(recievedPost);\n  };\n\n  useEffect(() => {\n    if (postId) {\n      fetchPostDetails();\n      fetchPostComments();\n    }\n  }, [postId]);\n\n  const updateAfterRemoveComment = (commentId: number) => {\n    removePostComment(commentId);\n    setComments(comments.filter((comment) => comment.id !== commentId));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length && (\n          <>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setIsHidden(!isHidden)}\n            >\n              {`${isHidden ? 'Show' : 'Hide'} ${comments.length} comments`}\n            </button>\n\n            {!isHidden && (\n              <ul className=\"PostDetails__list\">\n                {comments.map((comment) => (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={comment.id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => updateAfterRemoveComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\nimport './UserSelect.scss';\n\ntype Props = {\n  users: User[],\n  setUserId: (userId: number) => void,\n};\n\nexport const UserSelect: React.FC<Props> = ({ users, setUserId }) => {\n  const onChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+(event.target.value));\n  };\n\n  return (\n    <label htmlFor=\"userSelect\" className=\"UserSelect__label\">\n      Select a user: &nbsp;\n      <select\n        id=\"userSelect\"\n        className=\"App__user-selector\"\n        onChange={onChangeSelect}\n      >\n        <option value={0}>\n          All users\n        </option>\n\n        {users.map((user) => (\n          <option\n            key={user.id}\n            value={user.id}\n          >\n            {user.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n","import { getData } from './api';\n\nexport const getAllUsers = async (): Promise<User[]> => {\n  return getData('/users');\n};\n\nexport const getUserByName = async (username: string): Promise<User> => {\n  return getData(`/users?username=${username}`);\n};\n\nexport const getUserById = async (userId: number): Promise<User> => {\n  return getData(`/users/${userId}`);\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect/UserSelect';\nimport { getAllPosts, getUserPosts } from './api/posts';\nimport { getAllUsers } from './api/users';\n\nconst App: React.FC = () => {\n  const [selectedPostId, setSelectedPostId] = useState<number>(0);\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n\n  const fetchAllUsers = async () => {\n    const recievedUsers = await getAllUsers();\n\n    setUsers(recievedUsers);\n  };\n\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n\n  const fetchAllPosts = async () => {\n    const recievedPosts = await getAllPosts();\n\n    setPosts(recievedPosts);\n  };\n\n  const fetchUserPosts = async () => {\n    const recievedPosts = await getUserPosts(selectedUserId);\n\n    setPosts(recievedPosts);\n  };\n\n  useEffect(() => {\n    if (!selectedUserId) {\n      fetchAllPosts();\n    } else {\n      fetchUserPosts();\n    }\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          users={users}\n          setUserId={setSelectedUserId}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            postId={selectedPostId}\n            setPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails postId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}